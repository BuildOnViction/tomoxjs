#!/usr/bin/env node

const commander = require('commander')
const TomoXJS = require('./index')
require('dotenv').config()
const pjson = require('./package.json')

if (!process.env.DEX_URI || !process.env.TRADER_PKEY) {
    console.log('DEX_URI, TRADER_PKEY env are require, please create .env file')
    process.exit(1)
}

const tomox = new TomoXJS(
    process.env.DEX_URI,
    process.env.TRADER_PKEY)

commander
    .version(pjson.version)
    .description('TomoX Market CLI')

commander
    .command('create')
    .option('-b, --baseToken <baseToken>', 'base token', '0xBD8b2Fb871F97b2d5F0A1af3bF73619b09174B2A')
    .option('-q, --quoteToken <quoteToken>', 'quote token', '0x0000000000000000000000000000000000000001')
    .option('-p, --price <price>', 'price', '21207')
    .option('-a, --amount <amount>', 'amount', '00469')
    .option('-s, --side <side>', 'side', 'BUY')
    .action(async (params) => {
        await tomox.createOrder({
                baseToken: params.baseToken,
                quoteToken: params.quoteToken,
                price: params.price,
                amount: params.amount
        }).then(data => {
            console.log(data)
        }).catch(e => console.log(e))
    })

commander
    .command('cancel')
    .requiredOption('-s, --hash <hash>', 'hash')
    .option('-n, --nonce <nonce>', 'nonce', 0)
    .action(async (params) => {
        await tomox.cancelOrder(params.hash, params.nonce).then(data => {
            console.log(data)
        }).catch(e => console.log(e))
    })

commander.parse(process.argv)
